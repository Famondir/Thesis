ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
g1 + g2
df_temp <- df_rf_results %>% filter(n_predictors == 4, data_split == "test") %>%
rename(
confidence_score = score
) %>%
mutate(
type = factor(is_truth, levels = c(0, 1))
)
pr_df <- df_temp %>% pr_curve(type, confidence_score) %>%
rename(threshold = .threshold) %>% filter(threshold<=1) %>%
mutate(f1 = 2 * precision * recall / (precision + recall))
pr_auc <- round(df_temp %>% pr_auc(type, confidence_score) %>% .$.estimate, 3)
g1 <- pr_df %>%
ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
g1 + g2
df_temp <- df_rf_results %>% filter(n_predictors == 4, data_split == "test") %>%
rename(
confidence_score = score
) %>%
mutate(
type = factor(is_truth, levels = c(1, 0))
)
pr_df <- df_temp %>% pr_curve(type, confidence_score) %>%
rename(threshold = .threshold) %>% filter(threshold<=1) %>%
mutate(f1 = 2 * precision * recall / (precision + recall))
pr_auc <- round(df_temp %>% pr_auc(type, confidence_score) %>% .$.estimate, 3)
g1 <- pr_df %>%
ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
g1 + g2
df_rf_results
df_temp <- df_rf_results %>% filter(
n_predictors == 4, data_split == "test",
type == "Aktiva"
) %>%
rename(
confidence_score = score
) %>%
mutate(
type = factor(is_truth, levels = c(1, 0))
)
pr_df <- df_temp %>% pr_curve(type, confidence_score) %>%
rename(threshold = .threshold) %>% filter(threshold<=1) %>%
mutate(f1 = 2 * precision * recall / (precision + recall))
pr_auc <- round(df_temp %>% pr_auc(type, confidence_score) %>% .$.estimate, 3)
g1 <- pr_df %>%
ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
g1 + g2
df_temp <- df_rf_results %>% filter(
n_predictors == 4, data_split == "test",
type == "GuV"
) %>%
rename(
confidence_score = score
) %>%
mutate(
type = factor(is_truth, levels = c(1, 0))
)
pr_df <- df_temp %>% pr_curve(type, confidence_score) %>%
rename(threshold = .threshold) %>% filter(threshold<=1) %>%
mutate(f1 = 2 * precision * recall / (precision + recall))
pr_auc <- round(df_temp %>% pr_auc(type, confidence_score) %>% .$.estimate, 3)
g1 <- pr_df %>%
ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
g1 + g2
df_temp <- df_rf_results %>% filter(
n_predictors == 4, data_split == "test",
type == "Passiva"
) %>%
rename(
confidence_score = score
) %>%
mutate(
type = factor(is_truth, levels = c(1, 0))
)
pr_df <- df_temp %>% pr_curve(type, confidence_score) %>%
rename(threshold = .threshold) %>% filter(threshold<=1) %>%
mutate(f1 = 2 * precision * recall / (precision + recall))
pr_auc <- round(df_temp %>% pr_auc(type, confidence_score) %>% .$.estimate, 3)
g1 <- pr_df %>%
ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
g1 + g2
plot_pr_double_curve_multi <- function(df, selected_type, x_stuff = FALSE) {
df_temp2 <- df %>%
filter(loop == 0) %>% select(-filepath) %>% unnest(predictions) %>%
select(type, predicted_type, confidence_score) %>%
mutate(
type = if_else(type == selected_type, type, "no"),
predicted_type = if_else(predicted_type == selected_type, predicted_type, "no")
) %>%
mutate(type = factor(type, levels = c(selected_type, "no"))) %>%
mutate(
confidence_score = if_else(predicted_type == "no", 1-confidence_score, confidence_score)
)
# Precision-Recall Curve with ggplot2
pr_df <- df_temp2 %>% pr_curve(type, confidence_score) %>%
rename(threshold = .threshold) %>% filter(threshold<=1) %>%
mutate(f1 = 2 * precision * recall / (precision + recall))
pr_auc <- round(df_temp2 %>% pr_auc(type, confidence_score) %>% .$.estimate, 3)
best_F1_row <- pr_df %>% slice_max(n = 1, f1)
best_F1_row_high_recall <- pr_df %>%
filter(recall > 0.999, precision > 0.1) %>% slice_max(n = 1, f1)
best_F1 <- best_F1_row  %>% pull(f1)
best_F1_high_recall <- best_F1_row_high_recall %>% pull(f1)
best_threshold <- best_F1_row  %>% pull(threshold)
best_threshold_high_recall <- best_F1_row_high_recall  %>% pull(threshold)
best_precision_high_recall <- best_F1_row_high_recall  %>% pull(precision)
g1 <- pr_df %>%
ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
if (x_stuff == FALSE) {
g1 <- g1 + guides(color = FALSE) +
labs(x = element_blank())
g2 <- g2 + guides(color = FALSE) +
labs(x = element_blank())
}
combined_plot <- g1 + g2
combined_plot + plot_annotation(caption = paste0(
'Best F1 score of ', round(best_F1,3) , ' gets reached with threshold of value ', round(best_threshold,3), '\n',
'Best F1 score with recall > 0.999 of ', round(best_F1_high_recall,3) , ' gets reached with threshold of value ', round(best_threshold_high_recall,3), ' (corresp. precision value: ', round(best_precision_high_recall,3) , ')'))
}
model_name <- "Ministral-8B-Instruct-2410"
method_name <- "3_rag_examples"
df_temp_mistral_multi <- df_multi %>%
filter(
model == model_name,
method == method_name
) # %>% unnest(metrics) # %>% calc_micro_f1(model, method)
p_aktiva <- df_temp_mistral_multi %>% plot_pr_double_curve_multi("Aktiva", x_stuff = FALSE)
p_passiva <- df_temp_mistral_multi %>% plot_pr_double_curve_multi("Passiva", x_stuff = FALSE)
p_guv <- df_temp_mistral_multi %>% plot_pr_double_curve_multi("GuV", x_stuff = TRUE)
p_other <- df_temp_mistral_multi %>% plot_pr_double_curve_multi("other", x_stuff = TRUE)
wrap_elements(p_aktiva) / wrap_elements(p_passiva) / wrap_elements(p_guv) +
plot_layout(heights = c(2, 2, 3)) +
plot_annotation(title = str_c(model, " with ", method))
plot_pr_double_curve_tf <- function(df, selected_type, x_stuff = FALSE) {
df_temp2 <- df %>% filter(
n_predictors == 4, data_split == "test",
type == "Passiva"
) %>%
rename(
confidence_score = score
) %>%
mutate(
type = factor(is_truth, levels = c(1, 0))
)
# Precision-Recall Curve with ggplot2
pr_df <- df_temp2 %>% pr_curve(type, confidence_score) %>%
rename(threshold = .threshold) %>% filter(threshold<=1) %>%
mutate(f1 = 2 * precision * recall / (precision + recall))
pr_auc <- round(df_temp2 %>% pr_auc(type, confidence_score) %>% .$.estimate, 3)
best_F1_row <- pr_df %>% slice_max(n = 1, f1)
best_F1_row_high_recall <- pr_df %>%
filter(recall > 0.999, precision > 0.1) %>% slice_max(n = 1, f1)
best_F1 <- best_F1_row  %>% pull(f1)
best_F1_high_recall <- best_F1_row_high_recall %>% pull(f1)
best_threshold <- best_F1_row  %>% pull(threshold)
best_threshold_high_recall <- best_F1_row_high_recall  %>% pull(threshold)
best_precision_high_recall <- best_F1_row_high_recall  %>% pull(precision)
g1 <- pr_df %>%
ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
if (x_stuff == FALSE) {
g1 <- g1 + guides(color = FALSE) +
labs(x = element_blank())
g2 <- g2 + guides(color = FALSE) +
labs(x = element_blank())
}
combined_plot <- g1 + g2
combined_plot + plot_annotation(caption = paste0(
'Best F1 score of ', round(best_F1,3) , ' gets reached with threshold of value ', round(best_threshold,3), '\n',
'Best F1 score with recall > 0.999 of ', round(best_F1_high_recall,3) , ' gets reached with threshold of value ', round(best_threshold_high_recall,3), ' (corresp. precision value: ', round(best_precision_high_recall,3) , ')'))
}
df_temp <- df_rf_results
p_aktiva <- df_temp %>% plot_pr_double_curve_multi("Aktiva", x_stuff = FALSE)
plot_pr_double_curve_tf <- function(df, selected_type, x_stuff = FALSE) {
df_temp2 <- df %>% filter(
n_predictors == 4, data_split == "test",
type == "Passiva"
) %>%
rename(
confidence_score = score
) %>%
mutate(
type = factor(is_truth, levels = c(1, 0))
)
# Precision-Recall Curve with ggplot2
pr_df <- df_temp2 %>% pr_curve(type, confidence_score) %>%
rename(threshold = .threshold) %>% filter(threshold<=1) %>%
mutate(f1 = 2 * precision * recall / (precision + recall))
pr_auc <- round(df_temp2 %>% pr_auc(type, confidence_score) %>% .$.estimate, 3)
best_F1_row <- pr_df %>% slice_max(n = 1, f1)
best_F1_row_high_recall <- pr_df %>%
filter(recall > 0.999, precision > 0.1) %>% slice_max(n = 1, f1)
best_F1 <- best_F1_row  %>% pull(f1)
best_F1_high_recall <- best_F1_row_high_recall %>% pull(f1)
best_threshold <- best_F1_row  %>% pull(threshold)
best_threshold_high_recall <- best_F1_row_high_recall  %>% pull(threshold)
best_precision_high_recall <- best_F1_row_high_recall  %>% pull(precision)
g1 <- pr_df %>%
ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
if (x_stuff == FALSE) {
g1 <- g1 + guides(color = FALSE) +
labs(x = element_blank())
g2 <- g2 + guides(color = FALSE) +
labs(x = element_blank())
}
combined_plot <- g1 + g2
combined_plot + plot_annotation(caption = paste0(
'Best F1 score of ', round(best_F1,3) , ' gets reached with threshold of value ', round(best_threshold,3), '\n',
'Best F1 score with recall > 0.999 of ', round(best_F1_high_recall,3) , ' gets reached with threshold of value ', round(best_threshold_high_recall,3), ' (corresp. precision value: ', round(best_precision_high_recall,3) , ')'))
}
df_temp <- df_rf_results
p_aktiva <- df_temp %>% plot_pr_double_curve_tf("Aktiva", x_stuff = FALSE)
p_passiva <- df_temp %>% plot_pr_double_curve_tf("Passiva", x_stuff = FALSE)
p_guv <- df_temp %>% plot_pr_double_curve_tf("GuV", x_stuff = TRUE)
wrap_elements(p_aktiva) / wrap_elements(p_passiva) / wrap_elements(p_guv) +
plot_layout(heights = c(2, 2, 3)) +
plot_annotation(title = str_c(model, " with ", method))
plot_pr_double_curve_tf <- function(df, selected_type, x_stuff = FALSE) {
df_temp2 <- df %>% filter(
n_predictors == 4, data_split == "test",
type == selected_type
) %>%
rename(
confidence_score = score
) %>%
mutate(
type = factor(is_truth, levels = c(1, 0))
)
# Precision-Recall Curve with ggplot2
pr_df <- df_temp2 %>% pr_curve(type, confidence_score) %>%
rename(threshold = .threshold) %>% filter(threshold<=1) %>%
mutate(f1 = 2 * precision * recall / (precision + recall))
pr_auc <- round(df_temp2 %>% pr_auc(type, confidence_score) %>% .$.estimate, 3)
best_F1_row <- pr_df %>% slice_max(n = 1, f1)
best_F1_row_high_recall <- pr_df %>%
filter(recall > 0.999, precision > 0.1) %>% slice_max(n = 1, f1)
best_F1 <- best_F1_row  %>% pull(f1)
best_F1_high_recall <- best_F1_row_high_recall %>% pull(f1)
best_threshold <- best_F1_row  %>% pull(threshold)
best_threshold_high_recall <- best_F1_row_high_recall  %>% pull(threshold)
best_precision_high_recall <- best_F1_row_high_recall  %>% pull(precision)
g1 <- pr_df %>%
ggplot(aes(x = recall, y = precision)) +
geom_line(aes(color = threshold), size = 1.2) +
scale_color_viridis_c(option = "plasma", limits = c(0, 1)) +
labs(
subtitle = paste0("Precision-Recall Curve for ", selected_type, " (AUC = ", pr_auc, ")"),
x = "Recall",
y = "Precision"
) +
coord_cartesian(ylim = c(0,1)) +
theme(
legend.position = "bottom"
)
g2 <- pr_df %>%
ggplot(aes(x = recall, y = precision, color = f1)) +
geom_line(size = 1.2) +
scale_color_viridis_c(option = "viridis", limits = c(0, 1)) +
labs(
# title = "Precision-Recall Curve colored by F1 score",
x = "Recall",
y = NULL,
color = "F1 score"
) +
coord_cartesian(ylim = c(0,1))+
theme(
legend.position = "bottom"
)
if (x_stuff == FALSE) {
g1 <- g1 + guides(color = FALSE) +
labs(x = element_blank())
g2 <- g2 + guides(color = FALSE) +
labs(x = element_blank())
}
combined_plot <- g1 + g2
combined_plot + plot_annotation(caption = paste0(
'Best F1 score of ', round(best_F1,3) , ' gets reached with threshold of value ', round(best_threshold,3), '\n',
'Best F1 score with recall > 0.999 of ', round(best_F1_high_recall,3) , ' gets reached with threshold of value ', round(best_threshold_high_recall,3), ' (corresp. precision value: ', round(best_precision_high_recall,3) , ')'))
}
df_temp <- df_rf_results
p_aktiva <- df_temp %>% plot_pr_double_curve_tf("Aktiva", x_stuff = FALSE)
p_passiva <- df_temp %>% plot_pr_double_curve_tf("Passiva", x_stuff = FALSE)
p_guv <- df_temp %>% plot_pr_double_curve_tf("GuV", x_stuff = TRUE)
wrap_elements(p_aktiva) / wrap_elements(p_passiva) / wrap_elements(p_guv) +
plot_layout(heights = c(2, 2, 3)) +
plot_annotation(title = str_c(model, " with ", method))
reticulate::repl_python()
