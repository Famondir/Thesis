diff_start_page = start_page_Aktiva - start_page_Passiva,
diff_end_page = end_page_Aktiva - end_page_Passiva
) %>% select(
filepath, benchmark_type,
diff_start_page, diff_end_page
) %>%
mutate(
same_range = diff_start_page == diff_end_page,
) %>%
pivot_longer(cols = c(diff_start_page, diff_end_page)) %>% ggplot() +
geom_histogram(aes(x = value, fill = same_range), binwidth = 1) +
facet_wrap(~name)
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath, range) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type) %>%
unnest() %>% mutate(
diff_start_page = start_page_Aktiva - start_page_Passiva,
diff_end_page = end_page_Aktiva - end_page_Passiva
) %>% select(
filepath, benchmark_type, range,
diff_start_page, diff_end_page
) %>%
mutate(
same_range = diff_start_page == diff_end_page,
) %>%
pivot_longer(cols = c(diff_start_page, diff_end_page)) %>% ggplot() +
geom_histogram(aes(x = value, fill = same_range), binwidth = 1) +
facet_wrap(~name)
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath, range) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type)
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath, range) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type) %>%
unnest()
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type) %>%
unnest()
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type) %>%
unnest() %>% mutate(
diff_start_page = start_page_Aktiva - start_page_Passiva,
diff_end_page = end_page_Aktiva - end_page_Passiva
) %>% select(
filepath, benchmark_type, range,
diff_start_page, diff_end_page
) %>%
mutate(
same_range = diff_start_page == diff_end_page,
) %>%
pivot_longer(cols = c(diff_start_page, diff_end_page)) %>% ggplot() +
geom_histogram(aes(x = value, fill = same_range), binwidth = 1) +
facet_wrap(benchmark_type~name)
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type) %>%
unnest() %>% mutate(
diff_start_page = start_page_Aktiva - start_page_Passiva,
diff_end_page = end_page_Aktiva - end_page_Passiva
) %>% select(
filepath, benchmark_type,
diff_start_page, diff_end_page
) %>%
mutate(
same_range = diff_start_page == diff_end_page,
) %>%
pivot_longer(cols = c(diff_start_page, diff_end_page)) %>% ggplot() +
geom_histogram(aes(x = value, fill = same_range), binwidth = 1) +
facet_wrap(benchmark_type~name)
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type) %>%
unnest() %>% mutate(
diff_start_page = start_page_Aktiva - start_page_Passiva,
diff_end_page = end_page_Aktiva - end_page_Passiva
) %>% select(
filepath, benchmark_type,
diff_start_page, diff_end_page
) %>%
mutate(
same_range = diff_start_page == diff_end_page,
) %>%
pivot_longer(cols = c(diff_start_page, diff_end_page)) %>% ggplot() +
geom_histogram(aes(x = value, fill = same_range), binwidth = 1) +
facet_wrap(name~benchmark_type)
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath, range) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type) %>%
unnest() %>% mutate(
diff_start_page = start_page_Aktiva - start_page_Passiva,
diff_end_page = end_page_Aktiva - end_page_Passiva
) %>% select(
filepath, benchmark_type,
diff_start_page, diff_end_page
) %>%
mutate(
same_range = diff_start_page == diff_end_page,
) %>%
pivot_longer(cols = c(diff_start_page, diff_end_page)) %>% ggplot() +
geom_histogram(aes(x = value, fill = same_range), binwidth = 1) +
facet_wrap(name~benchmark_type)
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type) %>%
unnest() %>% mutate(
diff_start_page = start_page_Aktiva - start_page_Passiva,
diff_end_page = end_page_Aktiva - end_page_Passiva,
range_aktiva = end_page_Aktiva - start_page_Aktiva + 1,
range_passiva = end_page_Passiva - start_page_Passiva + 1,
) %>% select(
filepath, benchmark_type,
range_aktiva, range_passiva,
diff_start_page, diff_end_page
) %>%
mutate(
same_range = diff_start_page == diff_end_page,
) %>%
pivot_longer(cols = c(diff_start_page, diff_end_page)) %>% ggplot() +
geom_histogram(aes(x = value, fill = same_range), binwidth = 1) +
facet_wrap(name~benchmark_type)
df_toc_benchmark %>%
select(type, start_page, end_page, benchmark_type, filepath) %>%
filter(type != "GuV") %>%
pivot_wider(values_from = c(start_page, end_page), names_from = type) %>%
unnest() %>% mutate(
diff_start_page = start_page_Aktiva - start_page_Passiva,
diff_end_page = end_page_Aktiva - end_page_Passiva,
range_aktiva = end_page_Aktiva - start_page_Aktiva + 1,
range_passiva = end_page_Passiva - start_page_Passiva + 1,
) %>% select(
filepath, benchmark_type,
range_aktiva, range_passiva,
diff_start_page, diff_end_page
) %>%
mutate(
same_range = diff_start_page == diff_end_page,
) %>%
pivot_longer(cols = c(diff_start_page, diff_end_page)) %>% ggplot() +
geom_histogram(aes(x = value, fill = same_range, alpha = range_aktiva == 1), binwidth = 1) +
facet_wrap(name~benchmark_type)
df_toc_benchmark %>% filter(benchmark_type == "5 pages")
df_toc_benchmark %>% filter(benchmark_type == "5 pages") %>% group_by(type, in_range)
df_toc_benchmark %>% filter(benchmark_type == "5 pages") %>% group_by(type) %>% summarise(sum(in_range))
df_toc_benchmark %>% group_by(benchmark_type, type) %>% summarise(sum(in_range))
file_content <- readLines("../benchmark_results/page_identification/toc_results_mistral_8B_balance_details.json", warn = FALSE)
balanced_toc_benchmark_data <- paste(file_content, collapse = "\n") %>% str_replace_all(., "NaN", "null") %>% fromJSON()
balanced_df_toc_benchmark_5_pages <- balanced_toc_benchmark_data$toc_extraction_results_5_pages %>% mutate(benchmark_type = "5 pages") %>% as_tibble()
balanced_df_toc_benchmark_200_lines <- balanced_toc_benchmark_data$toc_extraction_results_200_lines %>% mutate(benchmark_type = "200 lines") %>% as_tibble()
balanced_df_toc_benchmark_mr <- balanced_toc_benchmark_data$machine_readable_toc %>% mutate(benchmark_type = "machine readable") %>% as_tibble()
balanced_df_toc_benchmark <- bind_rows(
balanced_df_toc_benchmark_5_pages,
balanced_df_toc_benchmark_200_lines,
balanced_df_toc_benchmark_mr
) %>% group_by(type, benchmark_type) %>%
mutate(
perc_correct = sum(in_range)/n(),
)  %>%
rowwise() %>%
mutate(
min_confidence = min(confidence_start_page, confidence_end_page),
range = abs(end_page - start_page) + 1,
)
balanced_df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = in_range)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
tribble(~`Benchmark Type`, `Page range predicting`, `TOC extracting`,
"5 pages", 36.9/66, 2*60+55.5/80,
"200 lines", 40.3/71, 5*60+4.2/80,
"machine readable", 26.9/43, NaN
) %>%
mutate_if(is.numeric, round, digits = 2)
tribble(~`Benchmark Type`, ~`Page range predicting`, ~`TOC extracting`,
"5 pages", 36.9/66, 2*60+55.5/80,
"200 lines", 40.3/71, 5*60+4.2/80,
"machine readable", 26.9/43, NaN
) %>%
mutate_if(is.numeric, round, digits = 2)
tribble(~`Benchmark Type`, ~`Page range predicting`, ~`TOC extracting`,
"5 pages", 36.9/66, (2*60+55.5)/80,
"200 lines", 40.3/71, (5*60+4.2)/80,
"machine readable", 26.9/43, NaN
) %>%
mutate_if(is.numeric, round, digits = 2)
gpu_time_per_document_page_range <- tribble(~`Benchmark Type`, ~`Page range predicting`, ~`TOC extracting`,
"5 pages", 36.9/66, (2*60+55.5)/80,
"200 lines", 40.3/71, (5*60+4.2)/80,
"machine readable", 26.9/43, NaN
) %>%
mutate_if(is.numeric, round, digits = 2)
df_toc_benchmark
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = in_range, color = min_distance<=1)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = in_range, color = abs(min_distance)=1)) +
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = in_range, color = abs(min_distance)<=1)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill =  abs(min_distance)<=1)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = in_range)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% filter(is.na(min_distance))
df_toc_benchmark %>% filter(is.na(min_distance)) %>% View()
df_toc_benchmark %>% filter(is.na(min_distance)) %>% group_by(bencmark_type) %>%
summarise(n = n()))
df_toc_benchmark %>% filter(is.na(min_distance)) %>% group_by(bencmark_type) %>%
summarise(n = n())
df_toc_benchmark %>% filter(is.na(min_distance)) %>% group_by(benchmark_type) %>%
summarise(n = n())
df_toc_benchmark %>% filter(is.na(min_distance)) %>% group_by(benchmark_type, type) %>%
summarise(n = n())
df_toc_benchmark %>% filter(is.na(in_range)) %>% group_by(benchmark_type, type) %>%
summarise(n = n())
df_toc_benchmark %>% filter((in_range)) %>% group_by(benchmark_type, type) %>%
summarise(n = n())
df_toc_benchmark %>% filter(is.na(min_distance)) %>% group_by(benchmark_type, type, in_range) %>%
summarise(n = n())
df_toc_benchmark %>% filter(is.na(min_distance))# %>% group_by(benchmark_type, type, in_range) %>%
df_toc_benchmark_5_pages <- toc_benchmark_data$toc_extraction_results_5_pages %>% mutate(benchmark_type = "5 pages") %>%
as_tibble() %>% filter(!isna(page))
df_toc_benchmark_5_pages <- toc_benchmark_data$toc_extraction_results_5_pages %>% mutate(benchmark_type = "5 pages") %>%
as_tibble() %>% filter(!is.na(page))
file_content <- readLines("../benchmark_results/page_identification/toc_results_mistral_8B.json", warn = FALSE)
toc_benchmark_data <- paste(file_content, collapse = "\n") %>% str_replace_all(., "NaN", "null") %>% fromJSON()
df_toc_benchmark_5_pages <- toc_benchmark_data$toc_extraction_results_5_pages %>% mutate(benchmark_type = "5 pages") %>%
as_tibble() %>% filter(!is.na(page))
df_toc_benchmark_200_lines <- toc_benchmark_data$toc_extraction_results_200_lines %>% mutate(benchmark_type = "200 lines") %>%
as_tibble() %>% filter(!is.na(page))
df_toc_benchmark_mr <- toc_benchmark_data$machine_readable_toc %>% mutate(benchmark_type = "machine readable") %>%
as_tibble() %>% filter(!is.na(page))
df_toc_benchmark <- bind_rows(
df_toc_benchmark_5_pages,
df_toc_benchmark_200_lines,
df_toc_benchmark_mr
) %>% group_by(type, benchmark_type) %>%
mutate(
perc_correct = sum(in_range)/n(),
)  %>%
rowwise() %>%
mutate(
min_confidence = min(confidence_start_page, confidence_end_page),
range = abs(end_page - start_page) + 1,
)
n_found_toc_5_pages <- df_toc_benchmark_5_pages$filepath %>% unique() %>% length()
n_found_toc_200_lines <- df_toc_benchmark_200_lines$filepath %>% unique() %>% length()
n_found_toc_mr <- df_toc_benchmark_mr$filepath %>% unique() %>% length()
mean_ranges <- df_toc_benchmark %>% group_by(benchmark_type) %>%
reframe(
`mean range` = mean(range, na.rm = T),
`SD range` = sd(range, na.rm = T),
) %>%
mutate_if(is.numeric, round, digits = 2)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = in_range)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = in_range, colour = min_distance <= 1)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = min_distance)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = ordered(min_distance))) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = ordered(min_distance), color = in_range)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = reverse(ordered(min_distance)), color = in_range)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
df_toc_benchmark %>% ggplot() +
geom_bar(aes(x = type, fill = forcats::fct_rev(ordered(min_distance)), color = in_range)) +
geom_text(
data = df_toc_benchmark %>% filter(in_range == TRUE),
aes(x = type, label = paste0(round(perc_correct, 2), "")),
stat = "count",
vjust = 1.2,
color = "white"
) +
geom_text(
aes(x = type, label = paste0(round(1-perc_correct, 2), "")),
stat = "count",
vjust = 1.5,
color = "white"
) +
facet_wrap(~benchmark_type, nrow = 1)
library(jsonlite)
library(tidyverse)
json_files_table_extraction_llm <- list.files(
"../benchmark_results/table_extraction/llm/real_tables/",
pattern = "\\.json$",
full.names = TRUE
) %>%
.[!grepl("_test_", .)]
meta_list_llm <- list()
# Loop through each .json file
for (file in json_files_table_extraction_llm) {
# print(file)
# Read the JSON file
# Read the JSON file and replace NaN with NULL in the file content
file_content <- readLines(file, warn = FALSE)
file_content <- gsub("\\bNaN\\b", "null", file_content)
file_content <- gsub("\\bInfinity\\b", "null", file_content)
# Remove incomplete last JSON entry and close the list if file ends early
if (!grepl("\\]$", file_content[length(file_content)])) {
# Find the last complete JSON object (ends with "},")
last_complete <- max(grep('\\.pdf', file_content))
file_content <- c(file_content[1:last_complete], "}]")
}
json_data <- fromJSON(paste(file_content, collapse = "\n"))
name_split = (basename(file) %>% str_split("__"))[[1]]
method_index = which(str_starts((basename(file) %>% str_split("__"))[[1]], "loop"))-1
# print(name_split)
results <-  json_data %>% as_tibble() %>% rowwise() %>%
mutate(
model = name_split[1],
method = name_split[method_index],
loop = as.numeric((basename(file) %>% str_match("loop_(.)(_queued)?\\.json"))[2]),
.before = 1
)
meta_list_llm[[length(meta_list_llm) + 1]] <- results
}
df <- bind_rows(meta_list_llm) %>% select(!starts_with("changed_values")) %>%
filter(grammar_error != TRUE || is.na(grammar_error)) %>%
unnest_wider(`NA`, names_sep = "_") %>%
unnest_wider(`relative_numeric_difference`, names_sep = "_") %>%
unnest_wider(`levenstein_distance`, names_sep = "_") %>%
# rename_with(~ gsub("^NA_", "NA_", .x)) %>%  # Ensures prefix is NA_
mutate(
NA_total_truth = NA_true_positive + NA_false_negative,
NA_precision = if_else(NA_total_truth > 0, NA_true_positive/(NA_true_positive + NA_false_positive), NA),
NA_recall = if_else(NA_total_truth > 0, NA_true_positive/(NA_true_positive + NA_false_negative), NA),
NA_F1 = if_else((NA_precision + NA_recall) > 0, (2 * NA_precision * NA_recall)/(NA_precision + NA_recall), 0),
percentage_correct_numeric = correct_numeric/(correct_numeric + incorrect_numeric),
percentage_correct_total = (correct_numeric + NA_true_positive)/total_entries
)
df <- df %>% rowwise() %>% mutate(
n_columns = str_match(filepath, "(.)_columns")[2],
span = if_else("True" == str_match(filepath, "span_(False|True)")[2], TRUE, FALSE),
thin = if_else("True" == str_match(filepath, "thin_(False|True)")[2], TRUE, FALSE),
year_as = str_match(filepath, "year_as_(.*)_unit")[2],
unit_in_first_cell = if_else("True" == str_match(filepath, "unit_in_first_cell_(False|True)")[2], TRUE, FALSE),
unit_str = str_match(filepath, "unit_in_first_cell_(False|True)_(.*)_enumeration")[3],
enumeration = if_else("True" == str_match(filepath, "enumeration_(False|True)")[2], TRUE, FALSE),
number_of_table = str_match(filepath, "enumeration_(False|True)_(.*)(_queued)?\\.pdf")[3]
) %>% mutate(
n_columns = ordered(n_columns, c("3", "4", "5"))
) # %>% filter(number_of_table %in% c("0", "1"))
df %>% select(c(model, method, percentage_correct_numeric, percentage_correct_total)) %>%
pivot_longer(cols = -c(model, method)) %>%
ggplot() +
geom_boxplot(aes(x = model, y = value)) +
# facet_wrap(~name, ncol = 1) +
scale_x_discrete(guide = guide_axis(angle = 30)) +
facet_grid(method~name)
